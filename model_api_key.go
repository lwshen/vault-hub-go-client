/*
Vault Hub Server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the APIKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIKey{}

// APIKey struct for APIKey
type APIKey struct {
	// Unique API key ID
	Id int64 `json:"id"`
	// Human-readable name for the API key
	Name string `json:"name"`
	// Array of vaults this key can access (null/empty = all user's vaults)
	Vaults []VaultLite `json:"vaults,omitempty"`
	// Optional expiration date
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
	// When the key was last used
	LastUsedAt *time.Time `json:"lastUsedAt,omitempty"`
	// Whether the key is currently active
	IsActive bool `json:"isActive"`
	// When the key was created
	CreatedAt time.Time `json:"createdAt"`
	// When the key was last updated
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

type _APIKey APIKey

// NewAPIKey instantiates a new APIKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIKey(id int64, name string, isActive bool, createdAt time.Time) *APIKey {
	this := APIKey{}
	this.Id = id
	this.Name = name
	this.IsActive = isActive
	this.CreatedAt = createdAt
	return &this
}

// NewAPIKeyWithDefaults instantiates a new APIKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIKeyWithDefaults() *APIKey {
	this := APIKey{}
	return &this
}

// GetId returns the Id field value
func (o *APIKey) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *APIKey) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *APIKey) SetId(v int64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *APIKey) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *APIKey) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *APIKey) SetName(v string) {
	o.Name = v
}

// GetVaults returns the Vaults field value if set, zero value otherwise.
func (o *APIKey) GetVaults() []VaultLite {
	if o == nil || IsNil(o.Vaults) {
		var ret []VaultLite
		return ret
	}
	return o.Vaults
}

// GetVaultsOk returns a tuple with the Vaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetVaultsOk() ([]VaultLite, bool) {
	if o == nil || IsNil(o.Vaults) {
		return nil, false
	}
	return o.Vaults, true
}

// HasVaults returns a boolean if a field has been set.
func (o *APIKey) HasVaults() bool {
	if o != nil && !IsNil(o.Vaults) {
		return true
	}

	return false
}

// SetVaults gets a reference to the given []VaultLite and assigns it to the Vaults field.
func (o *APIKey) SetVaults(v []VaultLite) {
	o.Vaults = v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *APIKey) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *APIKey) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *APIKey) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

// GetLastUsedAt returns the LastUsedAt field value if set, zero value otherwise.
func (o *APIKey) GetLastUsedAt() time.Time {
	if o == nil || IsNil(o.LastUsedAt) {
		var ret time.Time
		return ret
	}
	return *o.LastUsedAt
}

// GetLastUsedAtOk returns a tuple with the LastUsedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetLastUsedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUsedAt) {
		return nil, false
	}
	return o.LastUsedAt, true
}

// HasLastUsedAt returns a boolean if a field has been set.
func (o *APIKey) HasLastUsedAt() bool {
	if o != nil && !IsNil(o.LastUsedAt) {
		return true
	}

	return false
}

// SetLastUsedAt gets a reference to the given time.Time and assigns it to the LastUsedAt field.
func (o *APIKey) SetLastUsedAt(v time.Time) {
	o.LastUsedAt = &v
}

// GetIsActive returns the IsActive field value
func (o *APIKey) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *APIKey) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *APIKey) SetIsActive(v bool) {
	o.IsActive = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *APIKey) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *APIKey) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *APIKey) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *APIKey) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *APIKey) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *APIKey) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o APIKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Vaults) {
		toSerialize["vaults"] = o.Vaults
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	if !IsNil(o.LastUsedAt) {
		toSerialize["lastUsedAt"] = o.LastUsedAt
	}
	toSerialize["isActive"] = o.IsActive
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

func (o *APIKey) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"isActive",
		"createdAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAPIKey := _APIKey{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAPIKey)

	if err != nil {
		return err
	}

	*o = APIKey(varAPIKey)

	return err
}

type NullableAPIKey struct {
	value *APIKey
	isSet bool
}

func (v NullableAPIKey) Get() *APIKey {
	return v.value
}

func (v *NullableAPIKey) Set(val *APIKey) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIKey) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIKey(val *APIKey) *NullableAPIKey {
	return &NullableAPIKey{value: val, isSet: true}
}

func (v NullableAPIKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


