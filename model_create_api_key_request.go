/*
Vault Hub Server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CreateAPIKeyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAPIKeyRequest{}

// CreateAPIKeyRequest struct for CreateAPIKeyRequest
type CreateAPIKeyRequest struct {
	// Human-readable name for the API key
	Name string `json:"name"`
	// Array of vault unique IDs this key can access (empty = all user's vaults)
	VaultUniqueIds []string `json:"vaultUniqueIds,omitempty"`
	// Optional expiration date
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
}

type _CreateAPIKeyRequest CreateAPIKeyRequest

// NewCreateAPIKeyRequest instantiates a new CreateAPIKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAPIKeyRequest(name string) *CreateAPIKeyRequest {
	this := CreateAPIKeyRequest{}
	this.Name = name
	return &this
}

// NewCreateAPIKeyRequestWithDefaults instantiates a new CreateAPIKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAPIKeyRequestWithDefaults() *CreateAPIKeyRequest {
	this := CreateAPIKeyRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateAPIKeyRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateAPIKeyRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateAPIKeyRequest) SetName(v string) {
	o.Name = v
}

// GetVaultUniqueIds returns the VaultUniqueIds field value if set, zero value otherwise.
func (o *CreateAPIKeyRequest) GetVaultUniqueIds() []string {
	if o == nil || IsNil(o.VaultUniqueIds) {
		var ret []string
		return ret
	}
	return o.VaultUniqueIds
}

// GetVaultUniqueIdsOk returns a tuple with the VaultUniqueIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAPIKeyRequest) GetVaultUniqueIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.VaultUniqueIds) {
		return nil, false
	}
	return o.VaultUniqueIds, true
}

// HasVaultUniqueIds returns a boolean if a field has been set.
func (o *CreateAPIKeyRequest) HasVaultUniqueIds() bool {
	if o != nil && !IsNil(o.VaultUniqueIds) {
		return true
	}

	return false
}

// SetVaultUniqueIds gets a reference to the given []string and assigns it to the VaultUniqueIds field.
func (o *CreateAPIKeyRequest) SetVaultUniqueIds(v []string) {
	o.VaultUniqueIds = v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *CreateAPIKeyRequest) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAPIKeyRequest) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *CreateAPIKeyRequest) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *CreateAPIKeyRequest) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

func (o CreateAPIKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAPIKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.VaultUniqueIds) {
		toSerialize["vaultUniqueIds"] = o.VaultUniqueIds
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	return toSerialize, nil
}

func (o *CreateAPIKeyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAPIKeyRequest := _CreateAPIKeyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAPIKeyRequest)

	if err != nil {
		return err
	}

	*o = CreateAPIKeyRequest(varCreateAPIKeyRequest)

	return err
}

type NullableCreateAPIKeyRequest struct {
	value *CreateAPIKeyRequest
	isSet bool
}

func (v NullableCreateAPIKeyRequest) Get() *CreateAPIKeyRequest {
	return v.value
}

func (v *NullableCreateAPIKeyRequest) Set(val *CreateAPIKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAPIKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAPIKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAPIKeyRequest(val *CreateAPIKeyRequest) *NullableCreateAPIKeyRequest {
	return &NullableCreateAPIKeyRequest{value: val, isSet: true}
}

func (v NullableCreateAPIKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAPIKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


