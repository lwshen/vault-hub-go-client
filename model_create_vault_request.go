/*
Vault Hub Server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateVaultRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVaultRequest{}

// CreateVaultRequest struct for CreateVaultRequest
type CreateVaultRequest struct {
	// Human-readable name
	Name string `json:"name"`
	// Value to be encrypted and stored
	Value string `json:"value"`
	// Human-readable description
	Description *string `json:"description,omitempty"`
	// Category/type of vault
	Category *string `json:"category,omitempty"`
}

type _CreateVaultRequest CreateVaultRequest

// NewCreateVaultRequest instantiates a new CreateVaultRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVaultRequest(name string, value string) *CreateVaultRequest {
	this := CreateVaultRequest{}
	this.Name = name
	this.Value = value
	return &this
}

// NewCreateVaultRequestWithDefaults instantiates a new CreateVaultRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVaultRequestWithDefaults() *CreateVaultRequest {
	this := CreateVaultRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateVaultRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateVaultRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateVaultRequest) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *CreateVaultRequest) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CreateVaultRequest) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CreateVaultRequest) SetValue(v string) {
	o.Value = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateVaultRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVaultRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateVaultRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateVaultRequest) SetDescription(v string) {
	o.Description = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CreateVaultRequest) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVaultRequest) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CreateVaultRequest) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *CreateVaultRequest) SetCategory(v string) {
	o.Category = &v
}

func (o CreateVaultRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVaultRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["value"] = o.Value
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	return toSerialize, nil
}

func (o *CreateVaultRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateVaultRequest := _CreateVaultRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateVaultRequest)

	if err != nil {
		return err
	}

	*o = CreateVaultRequest(varCreateVaultRequest)

	return err
}

type NullableCreateVaultRequest struct {
	value *CreateVaultRequest
	isSet bool
}

func (v NullableCreateVaultRequest) Get() *CreateVaultRequest {
	return v.value
}

func (v *NullableCreateVaultRequest) Set(val *CreateVaultRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVaultRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVaultRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVaultRequest(val *CreateVaultRequest) *NullableCreateVaultRequest {
	return &NullableCreateVaultRequest{value: val, isSet: true}
}

func (v NullableCreateVaultRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVaultRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


