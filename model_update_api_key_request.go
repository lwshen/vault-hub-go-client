/*
Vault Hub Server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UpdateAPIKeyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAPIKeyRequest{}

// UpdateAPIKeyRequest struct for UpdateAPIKeyRequest
type UpdateAPIKeyRequest struct {
	// Human-readable name for the API key
	Name *string `json:"name,omitempty"`
	// Array of vault unique IDs this key can access (empty = all user's vaults)
	VaultUniqueIds []string `json:"vaultUniqueIds,omitempty"`
	// Optional expiration date
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
}

// NewUpdateAPIKeyRequest instantiates a new UpdateAPIKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAPIKeyRequest() *UpdateAPIKeyRequest {
	this := UpdateAPIKeyRequest{}
	return &this
}

// NewUpdateAPIKeyRequestWithDefaults instantiates a new UpdateAPIKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAPIKeyRequestWithDefaults() *UpdateAPIKeyRequest {
	this := UpdateAPIKeyRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateAPIKeyRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAPIKeyRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateAPIKeyRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateAPIKeyRequest) SetName(v string) {
	o.Name = &v
}

// GetVaultUniqueIds returns the VaultUniqueIds field value if set, zero value otherwise.
func (o *UpdateAPIKeyRequest) GetVaultUniqueIds() []string {
	if o == nil || IsNil(o.VaultUniqueIds) {
		var ret []string
		return ret
	}
	return o.VaultUniqueIds
}

// GetVaultUniqueIdsOk returns a tuple with the VaultUniqueIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAPIKeyRequest) GetVaultUniqueIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.VaultUniqueIds) {
		return nil, false
	}
	return o.VaultUniqueIds, true
}

// HasVaultUniqueIds returns a boolean if a field has been set.
func (o *UpdateAPIKeyRequest) HasVaultUniqueIds() bool {
	if o != nil && !IsNil(o.VaultUniqueIds) {
		return true
	}

	return false
}

// SetVaultUniqueIds gets a reference to the given []string and assigns it to the VaultUniqueIds field.
func (o *UpdateAPIKeyRequest) SetVaultUniqueIds(v []string) {
	o.VaultUniqueIds = v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *UpdateAPIKeyRequest) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAPIKeyRequest) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *UpdateAPIKeyRequest) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *UpdateAPIKeyRequest) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

func (o UpdateAPIKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAPIKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.VaultUniqueIds) {
		toSerialize["vaultUniqueIds"] = o.VaultUniqueIds
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	return toSerialize, nil
}

type NullableUpdateAPIKeyRequest struct {
	value *UpdateAPIKeyRequest
	isSet bool
}

func (v NullableUpdateAPIKeyRequest) Get() *UpdateAPIKeyRequest {
	return v.value
}

func (v *NullableUpdateAPIKeyRequest) Set(val *UpdateAPIKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAPIKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAPIKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAPIKeyRequest(val *UpdateAPIKeyRequest) *NullableUpdateAPIKeyRequest {
	return &NullableUpdateAPIKeyRequest{value: val, isSet: true}
}

func (v NullableUpdateAPIKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAPIKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


