/*
Vault Hub Server

Testing VaultAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/lwshen/vault-hub-go-client"
)

func Test_openapi_VaultAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test VaultAPIService CreateVault", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.VaultAPI.CreateVault(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VaultAPIService DeleteVault", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var uniqueId string

		httpRes, err := apiClient.VaultAPI.DeleteVault(context.Background(), uniqueId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VaultAPIService GetVault", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var uniqueId string

		resp, httpRes, err := apiClient.VaultAPI.GetVault(context.Background(), uniqueId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VaultAPIService GetVaults", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.VaultAPI.GetVaults(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VaultAPIService UpdateVault", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var uniqueId string

		resp, httpRes, err := apiClient.VaultAPI.UpdateVault(context.Background(), uniqueId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
